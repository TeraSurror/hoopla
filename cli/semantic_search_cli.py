import argparse

from lib.semantic_search import embed_query_text, embed_text, search_movies, verify_embeddings, verify_model

def main():
    parser = argparse.ArgumentParser(description="Semantic Search CLI")
    subparsers = parser.add_subparsers(dest="command", help="Available commands")

    verify_parser = subparsers.add_parser("verify", help="Verify that the embedding model is loaded")

    embed_text_parser = subparsers.add_parser("embed_text", help="Generate embeddings for a given text")
    embed_text_parser.add_argument("text", type=str, help="Text for which embeddings are generated")

    verify_embeddings_parser = subparsers.add_parser("verify_embeddings", help="Verify that the embeddings generated by the model")
    
    embed_query_parser = subparsers.add_parser("embedquery", help="Embed a given query")
    embed_query_parser.add_argument("query", type=str, help="Query for which embeddings are generated")

    search_parser = subparsers.add_parser("search", help="Search movies based on a query")
    search_parser.add_argument("query", type=str, help="Query to generate movie results")
    search_parser.add_argument("--limit", type=int, nargs="?", default=5, help="Max number of movies to list")

    args = parser.parse_args()

    match args.command:
        case "verify":
            verify_model()
        case "embed_text":
            embed_text(args.text)
        case "verify_embeddings":
            verify_embeddings()
        case "embedquery":
            embed_query_text(args.query)
        case "search":
            search_movies(args.query, args.limit)
        case _:
            parser.print_help()

if __name__ == "__main__":
    main()

